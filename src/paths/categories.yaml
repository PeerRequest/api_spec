get:
  tags:
    - categories
  description: "Returns all categories"
  operationId: getCategories
  summary: "/categories"
  parameters:
    - $ref: "../parameters/query/limit.yaml"
    - $ref: "../parameters/query/after.yaml"

  responses:
    200:
      description: "List of categories"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../schemas/category.yaml"

    400:
      description: "Invalid Request"

    401:
      description: "Unauthorized"

post:
  tags:
    - categories
  description: "Creates a new category"
  operationId: createCategory
  summary: "/categories"
  requestBody:
    description: "New category"
    required: true
    content:
      application/json:
        schema:
          allOf:
            - $ref: "../schemas/properties/category_properties.yaml"
            - required: ["name", "year", "label", "min_score", "max_score", "score_step_size"]
  
  responses:
    200:
      description: "Category created"
      content:
        application/json:
          schema:
            $ref: "../schemas/category.yaml"
    400:
      description: "Invalid Request"
    401:
      description: "Unauthorized"

patch:
  tags:
    - categories
  description: "Changes details of a category"
  operationId: patchCategory
  summary: "/categories"

  requestBody:
    description: "Changed details of the category"
    required: true
    content:
      application/json:
        schema:
          allOf:
            - $ref: "../schemas/properties/category_id.yaml"
            - required: ["id"]
            - $ref: "../schemas/properties/category_properties.yaml"

  responses:
    200:
      description: "Category changed"
      content:
        application/json:
          schema:
           $ref: "../schemas/category.yaml"

    400:
      description: "Invalid Request"

    401:
      description: "Unauthorized"

    404:
      description: "The requested category does not exist"