openapi: 3.0.0
info:
  version: 1.0.0
  title: PeerRequest API
  description: PeerRequest Open API Specification.
paths:
  /auth/logout:
    get:
      tags:
        - auth
      description: Logout the current user
      summary: /auth/logout
      responses:
        '200':
          description: User successfully logged out
  /auth/login:
    get:
      tags:
        - auth
      description: Redirects the user to an auth server
      summary: /auth/login
      parameters:
        - $ref: '#/components/parameters/auth_service'
      responses:
        '302':
          description: Redirect to the specified or default auth service
        '400':
          description: Invalid auth_service
  /auth/callback:
    get:
      tags:
        - auth
      description: OAuth2 Authentication Callback
      summary: /auth/callback
      parameters:
        - name: code
          in: query
          description: auth code give by an auth server to exchange for a token
          required: true
          schema:
            type: string
        - name: state
          in: query
          description: auth state returned by an auth server
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: contains granted scopes
          required: true
          schema:
            type: string
        - name: error
          in: query
          description: contains an error indicating why authorization failed
          required: false
          schema:
            type: string
        - name: error_description
          in: query
          description: contains an error description
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully logged in (will set a session cookie)
        '400':
          description: Malformed request or invalid flow
components:
  parameters:
    category_id:
      name: category_id
      in: path
      required: true
      description: The id of the category to retrieve
      schema:
        type: string
    entry_id:
      name: entry_id
      in: path
      required: true
      description: The id of the entry to retrieve
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: How many items to return at one time
      required: false
      schema:
        min: 1
        max: 100
        default: 100
        type: integer
        format: int32
    auth_service:
      name: auth_service
      in: query
      description: refers to a specific auth_service
      required: false
      schema:
        default: keycloak
        type: string
        enum:
          - keycloak
          - kit
    after:
      name: after
      in: query
      description: entity id of last entity from last page
      required: false
      schema:
        type: integer
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Entry:
      type: object
      properties:
        id:
          type: integer
          example: 42
        title:
          type: string
          example: 'Great Paper #01'
        researcher_id:
          type: integer
          example: 100
        researcher_name:
          type: string
          example: Karol Bender
        category_id:
          type: integer
          example: 5
        slots:
          type: integer
          example: 2
          nullable: true
    Category:
      type: object
      properties:
        id:
          type: integer
          example: 42
        type:
          type: string
          enum:
            - Internal
            - External
        year:
          type: integer
          example: 2023
        deadline:
          type: string
          example: 'Tue, 29. Nov 2022'
          format: 'ddd, dd. mmm yyyy'
        title:
          type: string
          example: International Paper Conference
        researcher_id:
          type: integer
          example: 100
        researcher_name:
          type: string
          example: Karol Bender
    User:
      type: object
      properties:
        id:
          type: integer
          example: 42
        name:
          type: string
          example: Roosevelt Booth
        email:
          type: string
          example: roosevelt.booth@example.org
    Review:
      type: object
      properties:
        id:
          type: integer
          example: 42
        entry_id:
          type: integer
          example: 100
        entry:
          anyOf:
            - $ref: '#/components/schemas/Entry'
            - type: object
              nullable: true
        researcher_id:
          type: integer
          example: 100
        researcher:
          anyOf:
            - $ref: '#/components/schemas/User'
            - type: object
              nullable: true
        reviewer_id:
          type: integer
          example: 200
        reviewer:
          anyOf:
            - $ref: '#/components/schemas/User'
            - type: object
              nullable: true
        estimated_time:
          description: Time when the reviewer thinks they have finished the review
          type: string
          example: 'Tue, 29. Nov 2022'
          format: 'ddd, dd. mmm yyyy'
  responses:
    UnexpectedError:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
